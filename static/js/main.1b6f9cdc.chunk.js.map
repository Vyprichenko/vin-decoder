{"version":3,"sources":["model/Result.js","model/Vin.js","model/ResultVariable.js","services/VinService.js","components/VinForm.js","components/LastSearches.js","components/ResultsTable.js","components/VariablesTable.js","components/Variable.js","App.js","serviceWorker.js","index.js"],"names":["Result","Value","ValueId","Variable","VariableId","this","value","valueId","variable","variableId","vin","error","validate","throwError","create","code","ajax","getJSON","pipe","map","json","Message","Results","e","message","search","results","r","Vin","toUpperCase","length","test","get","ResultVariable","DataType","Description","ID","Name","id","type","name","description","VinService","variables$","catchError","shareReplay","results$","BehaviorSubject","scan","valueMap","has","Map","entries","concat","reverse","slice","decode$","Subject","filter","withLatestFrom","switchMap","of","decode","materialize","tap","kind","next","share","promise","dematerialize","toPromise","VinForm","state","props","defaultVin","onVinChange","target","parseVin","setState","onSubmit","preventDefault","onReset","placeholder","autoFocus","onChange","React","Component","LastSearches","searches","location","i","arr","Fragment","key","to","ResultsTable","pathname","VariablesTable","variables","v","dangerouslySetInnerHTML","__html","App","onVinSubmit","history","push","vinService","resultsSubscription","subscribe","variablesSubscription","prevLocation","prevVin","parseVinQuery","thisVin","unsubscribe","QueryString","parse","codeResults","match","parseInt","params","find","exact","path","render","renderRootRoute","renderVariablesTableRoute","renderVariableRoute","keys","Boolean","window","hostname","root","document","getElementById","ReactDOM","basename","component","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1b6f9cdc.chunk.js","sourcesContent":["import { throwError } from 'rxjs';\r\nimport { ajax } from 'rxjs/ajax';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport default class Result {\r\n  constructor({ Value, ValueId, Variable, VariableId }) {\r\n    this.value = Value;\r\n    this.valueId = ValueId;\r\n    this.variable = Variable;\r\n    this.variableId = VariableId;\r\n  }\r\n\r\n  static get(vin) {\r\n    const error = vin.validate();\r\n\r\n    if (error) {\r\n      return throwError(Result.create(vin.code, error));\r\n    }\r\n    return ajax\r\n      .getJSON(\r\n        `https://vpic.nhtsa.dot.gov/api/vehicles/decodevin/${vin.code}?format=json`\r\n      )\r\n      .pipe(\r\n        map(json => {\r\n          try {\r\n            return Result.create(vin.code, json.Message, json.Results);\r\n          } catch (e) {\r\n            return Result.create(vin.code, e.message);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  static create(search = '', message = '', results = []) {\r\n    return {\r\n      search,\r\n      message,\r\n      results: results.map(r => new Result(r))\r\n    };\r\n  }\r\n}\r\n","import Result from './Result';\r\n\r\nexport default class Vin {\r\n  constructor(code) {\r\n    this.code = (code || '').toUpperCase();\r\n  }\r\n\r\n  validate() {\r\n    const { code } = this;\r\n\r\n    if (code.length === 0 || code.length > 17) {\r\n      return 'Expecting 1 to 17 characters.';\r\n    }\r\n    if (/[IOQ]/.test(code)) {\r\n      return 'Letters I, O and Q are not allowed.';\r\n    }\r\n    if (code.length > 8 && /[^\\d*]/.test(code[8])) {\r\n      return 'Check Digit (9th position) does not calculate properly.';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  decode() {\r\n    return Result.get(this);\r\n  }\r\n\r\n  toString() {\r\n    return this.code;\r\n  }\r\n}\r\n","import { ajax } from 'rxjs/ajax';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport default class ResultVariable {\r\n  constructor({ DataType, Description, ID, Name }) {\r\n    this.id = ID;\r\n    this.type = DataType;\r\n    this.name = Name;\r\n    this.description = Description;\r\n  }\r\n\r\n  static get() {\r\n    return ajax\r\n      .getJSON(\r\n        'https://vpic.nhtsa.dot.gov/api/vehicles/getvehiclevariablelist?format=json'\r\n      )\r\n      .pipe(\r\n        map(json => {\r\n          try {\r\n            return ResultVariable.create(json.Message, json.Results);\r\n          } catch (e) {\r\n            return ResultVariable.create(e.message);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  static create(message = '', results = []) {\r\n    return {\r\n      message,\r\n      results: results.map(r => new ResultVariable(r))\r\n    };\r\n  }\r\n}\r\n","import { of, BehaviorSubject, Subject } from 'rxjs';\r\nimport {\r\n  catchError,\r\n  dematerialize,\r\n  filter,\r\n  materialize,\r\n  scan,\r\n  share,\r\n  shareReplay,\r\n  switchMap,\r\n  tap,\r\n  withLatestFrom\r\n} from 'rxjs/operators';\r\nimport Vin from '../model/Vin';\r\nimport ResultVariable from '../model/ResultVariable';\r\n\r\nexport default class VinService {\r\n  constructor() {\r\n    this.variables$ = ResultVariable.get().pipe(\r\n      catchError(e => ResultVariable.create(e.message)),\r\n      shareReplay(1)\r\n    );\r\n\r\n    this.results$ = new BehaviorSubject().pipe(\r\n      scan((valueMap, value) => {\r\n        return value && !valueMap.has(value.search)\r\n          ? new Map(\r\n              [...valueMap.entries()]\r\n                .concat([[value.search, value]])\r\n                .reverse()\r\n                .slice(0, 5)\r\n                .reverse()\r\n            )\r\n          : valueMap;\r\n      }, new Map()),\r\n      shareReplay(1)\r\n    );\r\n\r\n    this.decode$ = new Subject().pipe(\r\n      filter(vin => vin.code),\r\n      withLatestFrom(this.results$),\r\n      switchMap(([vin, results]) =>\r\n        results.has(vin.code) ? of(results.get(vin.code)) : vin.decode()\r\n      ),\r\n      materialize(),\r\n      tap(({ kind, value }) => {\r\n        if (kind === 'N') this.results$.next(value);\r\n      }),\r\n      share()\r\n    );\r\n  }\r\n\r\n  parse(code) {\r\n    return new Vin(code);\r\n  }\r\n\r\n  decode(vin) {\r\n    const promise = this.decode$.pipe(dematerialize()).toPromise();\r\n    this.decode$.next(vin);\r\n    return promise;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class VinForm extends React.Component {\r\n  static propTypes = {\r\n    defaultVin: PropTypes.object.isRequired,\r\n    parseVin: PropTypes.func.isRequired,\r\n    onSubmit: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    vin: this.props.defaultVin\r\n  };\r\n\r\n  onVinChange = e => {\r\n    const { name, value } = e.target;\r\n    const { parseVin } = this.props;\r\n    this.setState({ [name]: parseVin(value) });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.vin);\r\n  };\r\n\r\n  onReset = e => {\r\n    this.props.onSubmit();\r\n  };\r\n\r\n  render() {\r\n    const { vin } = this.state;\r\n    const error = vin.validate();\r\n    return (\r\n      <form name=\"vin-form\" onSubmit={this.onSubmit} onReset={this.onReset}>\r\n        {/* <p>\r\n          The VIN is a composition of 17 characters (capital letters and digits)\r\n          that serves as a unique identifier for each vehicle. However, it\r\n          doesn't include letters I, O and Q. The VIN shows the unique\r\n          specifications, features, and manufacturer of each vehicle. They help\r\n          track recalls, registrations, insurance coverage, warranty claims, and\r\n          theft.\r\n        </p> */}\r\n        <input\r\n          type=\"text\"\r\n          name=\"vin\"\r\n          value={vin.code}\r\n          placeholder=\"Enter VIN\"\r\n          autoFocus\r\n          onChange={this.onVinChange}\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n        <button type=\"reset\">Reset</button>\r\n        <div>\r\n          <small>{error}</small>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function LastSearches({ searches, location }) {\r\n  return searches.length > 0 ? (\r\n    <p>\r\n      {'History: '}\r\n      {searches.map((vin, i, arr) => (\r\n        <React.Fragment key={vin}>\r\n          <Link to={{ ...location, search: `?vin=${vin}` }}>{vin}</Link>\r\n          {i + 1 < arr.length ? ', ' : null}\r\n        </React.Fragment>\r\n      ))}\r\n    </p>\r\n  ) : null;\r\n}\r\n\r\nLastSearches.propTypes = {\r\n  searches: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  location: PropTypes.object.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class ResultsTable extends React.Component {\r\n  static propTypes = {\r\n    results: PropTypes.object.isRequired,\r\n    location: PropTypes.object.isRequired\r\n  };\r\n\r\n  render() {\r\n    const { location } = this.props;\r\n    const { message, results } = this.props.results;\r\n\r\n    return (\r\n      <>\r\n        <p>{message}</p>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Variable</th>\r\n              <th>Value</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {results\r\n              .filter(r => r.value !== '' && r.value !== null)\r\n              .map(r => (\r\n                <tr key={r.variableId}>\r\n                  <td>\r\n                    <Link\r\n                      to={{\r\n                        ...location,\r\n                        pathname: `variables/${r.variableId}`,\r\n                        search: ''\r\n                      }}\r\n                    >\r\n                      {r.variable}\r\n                    </Link>\r\n                  </td>\r\n                  <td>{r.value}</td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n        <p>\r\n          <Link\r\n            to={{\r\n              ...location,\r\n              pathname: 'variables',\r\n              search: ''\r\n            }}\r\n          >\r\n            Vehicle Variables List\r\n          </Link>\r\n        </p>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function VariablesTable({ variables }) {\r\n  return variables.map(v => (\r\n    <React.Fragment key={v.id}>\r\n      <h2 id={v.id}>{v.name}</h2>\r\n      <div dangerouslySetInnerHTML={{ __html: v.description }} />\r\n    </React.Fragment>\r\n  ));\r\n}\r\n\r\nVariablesTable.propTypes = {\r\n  variables: PropTypes.arrayOf(PropTypes.object).isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Variable({ variable }) {\r\n  return <div dangerouslySetInnerHTML={{ __html: variable.description }} />;\r\n}\r\n\r\nVariable.propTypes = {\r\n  variable: PropTypes.object.isRequired\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport QueryString from 'query-string';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport VinService from './services/VinService';\r\nimport VinForm from './components/VinForm';\r\nimport LastSearches from './components/LastSearches';\r\nimport ResultsTable from './components/ResultsTable';\r\nimport VariablesTable from './components/VariablesTable';\r\nimport Variable from './components/Variable';\r\n\r\nclass App extends React.Component {\r\n  static propTypes = {\r\n    history: PropTypes.object.isRequired,\r\n    location: PropTypes.object.isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      results: null,\r\n      variables: null\r\n    };\r\n\r\n    this.vinService = new VinService();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.resultsSubscription = this.vinService.results$.subscribe(results =>\r\n      this.setState({ results })\r\n    );\r\n    this.variablesSubscription = this.vinService.variables$.subscribe(results =>\r\n      this.setState({ variables: results })\r\n    );\r\n    this.vinService.decode(this.vin);\r\n  }\r\n\r\n  componentDidUpdate({ location: prevLocation }) {\r\n    const prevVin = this.parseVinQuery(prevLocation);\r\n    const thisVin = this.vin;\r\n\r\n    if (thisVin.code !== prevVin.code) {\r\n      this.vinService.decode(thisVin);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.resultsSubscription.unsubscribe();\r\n    this.variablesSubscription.unsubscribe();\r\n  }\r\n\r\n  parseVinQuery(location) {\r\n    const { vin } = QueryString.parse(location.search);\r\n    return this.vinService.parse(vin);\r\n  }\r\n\r\n  get vin() {\r\n    const { location } = this.props;\r\n    return this.parseVinQuery(location);\r\n  }\r\n\r\n  get codeResults() {\r\n    const { results } = this.state;\r\n    return results ? results.get(this.vin.code) : null;\r\n  }\r\n\r\n  get searches() {\r\n    const { results } = this.state;\r\n    return results ? [...results.keys()] : [];\r\n  }\r\n\r\n  onVinSubmit = vin => {\r\n    const { history, location } = this.props;\r\n    history.push({\r\n      ...location,\r\n      search: vin ? `?vin=${vin.code}` : null\r\n    });\r\n  };\r\n\r\n  renderRootRoute({ location }) {\r\n    const { vin, codeResults: results } = this;\r\n    return (\r\n      <>\r\n        <h1>VIN Decoder</h1>\r\n        <VinForm\r\n          key={`vin[${vin.code}]`}\r\n          defaultVin={vin}\r\n          parseVin={this.vinService.parse}\r\n          onSubmit={this.onVinSubmit}\r\n        />\r\n        <LastSearches location={location} searches={this.searches} />\r\n        {results ? (\r\n          <ResultsTable location={location} results={results} />\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderVariablesTableRoute() {\r\n    const { variables } = this.state;\r\n\r\n    if (variables) {\r\n      const { message, results } = variables;\r\n\r\n      if (results.length === 0)\r\n        return (\r\n          <>\r\n            <h1>Vehicle Variables</h1>\r\n            <p>{message}</p>\r\n          </>\r\n        );\r\n      else\r\n        return (\r\n          <>\r\n            <h1>Vehicle Variables</h1>\r\n            <VariablesTable variables={results} />\r\n          </>\r\n        );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  renderVariableRoute({ match }) {\r\n    const { variables } = this.state;\r\n    const variableId = parseInt(match.params.variableId, 10);\r\n\r\n    if (variables) {\r\n      const { message, results } = variables;\r\n      const variable = results.find(v => v.id === variableId);\r\n\r\n      if (results.length === 0)\r\n        return (\r\n          <>\r\n            <h1>Variable</h1>\r\n            <p>{message}</p>\r\n          </>\r\n        );\r\n      if (!variable)\r\n        return (\r\n          <>\r\n            <h1>Variable</h1>\r\n            <p>Not Found</p>\r\n          </>\r\n        );\r\n      else\r\n        return (\r\n          <>\r\n            <h1>{variable.name}</h1>\r\n            <Variable variable={variable} />\r\n          </>\r\n        );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route exact path=\"/\" render={props => this.renderRootRoute(props)} />\r\n        <Route\r\n          exact\r\n          path=\"/variables\"\r\n          render={props => this.renderVariablesTableRoute(props)}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/variables/:variableId\"\r\n          render={props => this.renderVariableRoute(props)}\r\n        />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default () => (\r\n  <Router basename=\"/vin-decoder\">\r\n    <Route component={App} />\r\n  </Router>\r\n);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst root = document.getElementById('root');\r\n\r\nReactDOM.render(<App />, root);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}